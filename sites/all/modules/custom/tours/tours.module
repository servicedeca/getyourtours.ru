<?php
/**
 * @file
 */


/**
 * Implements hook_menu().
 */
function tours_menu() {
  $item['show_tours'] = array(
    'title' => 'Tours',
    'page callback' => 'tours_get_tours',
    'access callback' => TRUE,
  );
  $item['search_tours'] = array(
    'title' => 'Search tour',
    'page callback' => 'tours_search_tours',
    'access callback' => TRUE,
  );
  $item['hotel/%'] = array(
    'title' => 'Hotel',
    'page callback' => 'tours_hotel_tours',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );
  $item['get_region'] = array(
    'title' => 'region',
    'page callback' => 'tours_get_region',
    'access callback' => TRUE,
  );
  $item['get_hotel'] = array(
    'page callback' => 'tours_get_hotel',
    'access callback' => TRUE,
  );
  $item['tours/crh_autocomplete'] = array(
    'page callback' => 'tours_autocomplete_crh',
    'access arguments' => array('access content'),
    'access callback' => TRUE,
  );
  return $item;
}

/**
 * Implements hook_menu().
 */

function tours_theme() {

  $items['tours_search_form'] = array(
      'template' => 'tours-search-form',
      'render element' => 'form',
    );

  $items['tours_search_tours'] = array(
    'template' => 'tours-search-tours',
    'variables' => array(
      'variables' => NULL,
    ),
  );

  $items['tours_hotel_tours'] = array(
    'template' => 'tours-hotel-tours',
  );

  $items['tours_newsletter_form'] = array(
    'templates' => 'tours-newsletter-form',
    'render element' => 'form',
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function tours_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'panels') {
    return "plugins/$plugin_type";
  }

  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return "plugins/content_types";
  }
}

/**
 * Get text block for main page.
 *
 * @return array.
 */
function tours_main_text_block() {

  $query = db_select('node', 'n');
  $query->fields('n', array('nid'));
  $query->condition('n.type ', 'text_block');
  $nids = $query->execute()->fetchCol();

  if ($nids) {
    foreach ($nids as $nid) {
      $nodes[] = node_load($nid);
    }

    return $nodes;
  }

  return array();
}

/*
 * Get Promotions tours.
 */
function tours_get_promotions_tours() {
  return array(
    '0' => array(
      'title' => 'Море восторга в Шарм-эль-Шейхе!',
      'country' => 'Египет',
      'date' => 'Вылеты 5—28 ноября',
      'duration' => '7 ночей',
      'price' => '200',
      'image' => 'http://static4.onlinetours.ru/system/uploads/special_offer_photo/image/5735/main_281.jpg'
    ),
    '1' => array(
      'title' => 'Ммм... Bellissimo! Вкусные итальянские цены!!',
      'country' => 'Италия',
      'date' => 'Вылеты 19 ноября — 24 января',
      'duration' => '7 ночей',
      'price' => '200',
      'image' => 'http://static2.onlinetours.ru/system/uploads/special_offer_photo/image/5814/main________.jpg'
    ),
  );
}

/*
 * Checking for dynamic pricing
 */
function tours_checking_dynamic($countryId, $cityId) {
  $directory_url = 'http://search.tez-tour.com/toursearch/getCalcTypes';
  $data_directory = array(
    'xml' => 'false',
    'formatResult' => 'true'
  );
  $url = url($directory_url, array('query' => $data_directory));
  $directory_http = drupal_http_request($url);
  $directory = json_decode($directory_http->data)->calcByTariffs;
  foreach($directory as $value) {
    if($value->arrCountry == $countryId && $value->depCity == $cityId ) {
      return TRUE;
    }
  }
  return FALSE;
}

/*
 * page callback to /get_region.
 */
function tours_get_region($autocomplete = true) {
  if($autocomplete == true) {
    $country_to = $_POST['country_to'];
    $city = $_POST['city'];
  }
  else {
    $country_to = $_GET['country_to'];
    $city = $_GET['city'];
  }
  if (tours_checking_dynamic($country_to, $city) == TRUE ) {
    $url = url('http://search.tez-tour.com/tariffsearch/byCountry');
  }
  else {
    $url = url('http://search.tez-tour.com/toursearch/byCountry');
  }
  $data = array(
    'countryId' => $country_to,
    'locale' => 'ru',
  );
  $full_url = url($url, array('query' => $data));
  $result = drupal_http_request($full_url);
  $result = json_decode($result->data);
  if($autocomplete == true) {
    print "<option value=".null.">".t('any')."</option>";
    foreach($result->tours as $value) {
      if($value->tourId[1]){
        print "<option value=". $value->tourId[0] .",". $value->tourId[1] .">". $value->name ."</option>";
      }
      else {
        print "<option value=". $value->tourId[0] .">". $value->name ."</option>";
      }
    }
    exit();
  }
  else {
    $region[null] = t('any');
    foreach($result->tours as $key => $value) {
      if(isset($value->tourId[1])){
       $region[$value->tourId[0] .",". $value->tourId[1]] = $value->name;
      }
      else {
        $region[$value->tourId[0]] = $value->name;
      }
    }
    return $region;
  }
}

/*
 * Get country, region, hotel.
 */
function tours_get_crh($city) {
  $country = tours_get_data_operator('countries');
  foreach ($country as $id => $val) {
    if (tours_checking_dynamic($id, '2190') == TRUE ) {
      $url = url('http://search.tez-tour.com/tariffsearch/byCountry');
    }
    else {
      $url = url('http://search.tez-tour.com/toursearch/byCountry');
    }
    $query = array(
      'countryId' => $id,
      'locale' => 'ru',
    );
    $full_url = url($url, array('query' => $query));
    $data = drupal_http_request($full_url);
    $result['region'] = json_decode($data->data)->tours;
    $result['hotel'] = json_decode($data->data)->hotels;
    foreach($country as $key => $val) {
      $data_tour[] = $val;
    }
    foreach($result as $res) {
      foreach($res as $id => $value) {
        $data_tour[] = $value->name;
      }
    }
  }
  return $data_tour;
}

/*
 * Check country region hotel.
 */
function tours_check_crh($string, $city) {
  $country = tours_get_data_operator('countries');
  foreach($country as $key => $value) {
    if($value == $string) {
      return array(
        'country' => $key,
      );
    }
  }
  foreach ($country as $id => $val) {
    if (tours_checking_dynamic($id, $city) == TRUE ) {
      $url = url('http://search.tez-tour.com/tariffsearch/byCountry');
    }
    else {
      $url = url('http://search.tez-tour.com/toursearch/byCountry');
    }
    $query = array(
      'countryId' => $id,
      'locale' => 'ru',
    );
    $full_url = url($url, array('query' => $query));
    $data = drupal_http_request($full_url);
    $region = json_decode($data->data)->tours;
    foreach($region as $key => $value) {
      if($value->name == $string) {
        return array(
          'country' => $id,
          'region' => $value->tourId[0],
        );
      }
    }
    $hotel = json_decode($data->data)->hotels;
    foreach($hotel as $key => $value) {
      if($value->name == $string) {
        return array(
          'country' => $id,
          'hotel' => $value->hotelId,
          'region' => $value->tourId,
        );
      }
    }
  }
  return false;
}

/*
 * page callback to /get_hotel.
 */
function tours_get_hotel($autocomplete = true) {
  if($autocomplete == true) {
    if(isset($_POST['country_to']) && isset($_POST['city'])) {
      $country_to = $_POST['country_to'];
      $city = $_POST['city'];
    }
    else {
      return 0;
    }
  }
  else {
    if(isset($_GET['country_to']) && isset($_GET['city'])) {
      $country_to = $_GET['country_to'];
      $city = $_GET['city'];
    }
    else {
      return 0;
    }
  }
  if (tours_checking_dynamic($country_to, $city) == TRUE ) {
    $url = url('http://search.tez-tour.com/tariffsearch/byCountry');
  }
  else {
    $url = url('http://search.tez-tour.com/toursearch/byCountry');
  }
  $data = array(
    'countryId' => $country_to,
    'locale' => 'ru',
  );
  $full_url = url($url, array('query' => $data));
  $result = drupal_http_request($full_url);
  $result = json_decode($result->data);
  if($autocomplete == true) {
    print "<option value=0>". t('any') ."</option>";
    foreach($result->hotels as $value) {
        print "<option value=". $value->hotelId .">". $value->name ."</option>";
    }
    exit();
  }
  else {
    $hotels[null] = t('any');
    foreach($result->hotels as $value) {
        $hotels[$value->hotelId] = $value->name;
    }
    return $hotels;
  }
}

/**
 * Form builder for tour search form.
 */
function tours_tour_search_form($form, $form_state) {

  $form['search'] = array(
    '#type'	=> 'textfield',
    '#default_value' => isset($_GET['search']) ? $_GET['search']: NULL,
    '#autocomplete_path' => 'tours/crh_autocomplete',
    '#attributes' => array(
      'class' => array('typeahead form-control tt-hint'),
    ),
  );

  $form['city'] = array(
    '#type'	=> 'select',
    '#title' => t('City ​​of departure'),
    '#default_value' => isset($_GET['city']) ? $_GET['city']: 0,
    '#attributes' => array(
      'class' => array('form-control', 'chosen'),
    ),
    '#options' => tours_get_data_operator('cities'),
  );

  $form['country_to'] = array(
    '#type'	=> 'select',
    '#title' => t('Country to'),
    '#default_value' => $_GET['country_to'],
    '#attributes' => array(
      'class' => array('form-control'),
    ),
    '#options' => tours_get_data_operator('countries'),
  );

  $form['tourId'] = array(
    '#type'	=> 'select',
    '#title' => t('Region'),
    '#default_value' => isset($_GET['tourId']) ? $_GET['tourId'] : 0,
    '#attributes' => array(
      'class' => array('form-control'),
    ),
    '#options' => tours_get_region(false),
  );

  $form['hotelId'] = array(
    '#type'	=> 'select',
    '#title' => t('Hotel'),
    '#default_value' => isset($_GET['hotelId']) ? $_GET['hotelId']: 0,
    '#attributes' => array(
      'class' => array('form-control'),
    ),
    '#options' => tours_get_hotel(false),
  );

  $form['hotelClassId'] = array(
    '#type'	=> 'select',
    '#title' => t('Hotel Class'),
    '#default_value' => isset($_GET['hotelId']) ? $_GET['hotelId']: 0,
    '#options' => tours_get_data_operator('hotelClasses'),
    '#attributes' => array(
      'class' => array('form-control'),
    ),
  );

  $form['rAndBId'] = array(
    '#type'	=> 'select',
    '#title' => t('Food'),
    '#default_value' => isset($_GET['rAndBId']) ? $_GET['rAndBId']: 0,
    '#options' => tours_get_data_operator('rAndBs'),
    '#attributes' => array(
      'class' => array('form-control'),
    ),
  );

  $form['date_of'] = array(
    '#title' => t('Date of'),
    '#type' => 'date_popup',
    '#date_format' => 'd.m.Y',
    '#default_value' => isset($_GET['date_of']['date']) ? $_GET['date_of']['date'] : date('d.m.Y'),
    '#attributes' => array(
      'class' => array('form-control'),
    ),
  );

  $form['date_to'] = array(
    '#type' => 'date_popup',
    '#title' => t('Date to'),
    '#date_format' => 'd.m.Y',
    '#default_value' => isset($_GET['date_of']['date']) ? $_GET['date_of']['date'] : date('d.m.Y'),
    '#attributes' => array(
      'class' => array('form-control'),
    ),
  );

  $form['adults'] = array(
    '#type' => 'hidden',
    '#title' => t('Adults'),
    '#value' => empty($_GET['adults']) ? $_GET['adults'] = 1 : $_GET['adults'],
    '#attributes' => array(
      'id' => array('tours-count-adults'),
    ),
  );

  $form['children'] = array(
    '#type' => 'hidden',
    '#title' => t('Children'),
    '#value' => empty($_GET['children']) ? $_GET['children'] = 0 : $_GET['children'],
    '#attributes' => array(
      'id' => array('tours-count-children'),
    ),
  );
  $birthday = array(
    '1' => '1',
    '2' => '2',
    '3' => '3',
    '4' => '4',
    '5' => '5',
    '6' => '6',
    '7' => '7',
    '8' => '8',
    '9' => '9',
    '10' => '10',
    '11' => '11',
    '12' => '12',
  );
  $form['birthday1'] = array(
    '#type' => 'select',
    '#default_value' => isset($_GET['birthday1']) ? $_GET['birthday1']: 0,
    '#options' => $birthday,
    '#disabled' => 'disabled',
    '#attributes' => array(
      'class' => array('form-control'),
      'id' => array('children-birthday1'),
    ),
  );
  $form['birthday2'] = array(
    '#type' => 'select',
    '#options' => $birthday,
    '#default_value' => isset($_GET['birthday2']) ? $_GET['birthday2']: 0,
    '#disabled' => true,
    '#attributes' => array(
      'class' => array('form-control'),
      'id' => array('children-birthday2'),
    ),
  );

  $form['nights'] = array(
    '#type' => 'hidden',
    '#title' => t('nights'),
    '#attributes' => array(
      'class' => array('form-nights'),
    ),
  );

  $form['price'] = array(
    '#type' => 'hidden',
    '#title' => t('price'),
    '#attributes' => array(
      'class' => array('form-price'),
    ),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
    '#attributes' => array(
      'class' => array('btn btn-primary btn-lg'),
    ),
  );

  $form['#method'][] = 'GET';
  $form['#theme'][] = 'tours_search_form';
  $form['#action'] = '/search_tours';
  return $form;
}

/*
 *  Get data from the operator
 */
function tours_get_data_operator($param=NULL) {
  $url = 'http://search.tez-tour.com/toursearch/references';
  $query = array(
    'locale' => 'ru',
    'formatResult' => 'true',
    'xml' => 'false',
  );
  $full_url = url($url, array('query' => $query));
  $result = drupal_http_request($full_url);
  $result = json_decode($result->data)->$param;
  foreach($result as $value) {
    switch($param){
      case 'cities':
        $data[$value->cityId] = $value->name;
        break;
      case 'countries':
        $data[$value->countryId] = $value->name;
        break;
      case 'hotelClasses':
        $data[$value->classId] = $value->name;
        break;
      case 'rAndBs':
        $data[$value->rAndBId] = $value->name;
        break;
    }
  }
  return $data;
}

/**
 * Autocomplete_crh callback.
 */
function tours_autocomplete_crh($string) {
  if(!cache_get('crh')) {
     $crh =  tours_get_crh('20668');
     cache_set('crh', $crh);
     $data = $crh;
  }
  else {
    $data = cache_get('crh')->data;
  }
  $matches = array();
  if($string) {
    foreach($data as $value){
      if(preg_match("/$string/i", $value)) {
        $matches[$value] = $value;
      }
    }
  }
  drupal_json_output($matches);
}

/*
 * Page callback /hotel
 */

function tours_hotel_tours($hotelId) {
  return theme('tours_hotel_tours', array('hotelId' => $hotelId));
}

/*
 * Page callback /search_tours
 */
function tours_search_tours() {
  return theme('tours_search_tours', array());
}

/*
 * Get tours.
 */
function tours_get_tours($hotelId = NULL) {

  if($_GET['search']) {
    $result = tours_check_crh($_GET['search'], $_GET['city']);
    $cityId = $_GET['city'];
    $countryId = $result['country'];
    $_GET['country_to'] = $result['country'];
    if (isset($result['region'])) {
      $_GET['tourId'] = $result['region'];
    }
    if (isset($result['hotel'])) {
      $_GET['hotelId'] = $result['hotel'];
      $_GET['tourId'] = $result['region'];
    }
    if (tours_checking_dynamic($countryId, $cityId) == TRUE ) {
      $accommodations = 'http://www.tez-tour.com/tariffsearch/accommodations';
    }
    else{
      $accommodations = 'http://www.tez-tour.com/toursearch/accommodations';
    }
    $accommodations_query = array(
      'cityId' => $cityId,
      'countryId' => $countryId,
    );
    $adults = $_GET['adults'];
    $children = $_GET['children'];
    $accommodations_url = url($accommodations, array('query' => $accommodations_query));
    $accommodations_data = json_decode(drupal_http_request($accommodations_url)->data)->accommodations;
    foreach($accommodations_data as $value) {
      if($value->adult == $adults && $value->children == $children) {
        $accommodationId = $value->accommodationId;
      }
    }
    $after = $_GET['date_of']['date'];
    $before = $_GET['date_to']['date'];
    if (tours_checking_dynamic($countryId, $cityId) == TRUE ) {
      $url = 'http://www.tez-tour.com/tariffsearch/getResult';
      $dynamics = 1;
    }
    else{
      $url = 'http://www.tez-tour.com/toursearch/getResult';
      $dynamics = NULL;
    }
    $data = array(
     //'callback' => '1415341714601',
      'currency' => '5561',
      'nightsMin' => '6',
      'nightsMax' => '14',
      'accommodationId' => $accommodationId,
      'tourType' => '1',
      'locale' => 'ru',
      'cityId' => $cityId,
      'countryId' => $countryId,
      'after' => $after,
      'before' => $before,
      'hotelInStop' => 'false',
      'specialInStop' => 'false',
      'version' => '2',
      'hotelClassBetter' => 'true',
      'rAndBBetter' => 'true',
      'hotelId' => $hotelId,
      'noTicketsTo' => 'false',
      'noTicketsFrom' => 'false',
      'searchTypeId' => '3',
      'recommendedFlag' => 'false',
      'salePrivateFlag' => 'false',
      'onlineConfirmFlag' => 'false',
    );
    if(isset($_GET['price'])) {
     /* $data['priceMin'] = explode(";", $_GET['price'])[0];
      $data['priceMax'] = explode(";", $_GET['price'])[1];*/
    }
    else {
      $data['priceMin'] =  '0';
      $data['priceMax'] = '15000';
    }
    if(isset($_GET['nights'])) {
      $data['nightsMin'] = explode(";", $_GET['nights'])[0];
      $data['nightsMax'] = explode(";", $_GET['nights'])[1];
    }
    else {
      $data['nightsMin'] = '6';
      $data['nightsMax  '] = '14';
    }
    isset($_GET['hotelClassId']) ? $data['hotelClassId'] = $_GET['hotelClassId'] : $data['hotelClassId'] = '70486';
    isset($result['region']) ? $data['tourId'] = $result['region'] : $_GET['tourId'] = NULL;
    isset($_GET['rAndBId']) ? $data['rAndBId'] = $_GET['rAndBId'] : $_GET['rAndBId'] = '2424';
    if( current_path() == 'hotel/%') {
      $data['hotelId'] = $hotelId;
    }
    elseif(!isset($result['hotel']) && current_path() != 'hotel/%') {
      $data['hotelId'] = NULL;
    }
    else{
      $data['hotelId'] = $result['hotel'];
    }
    if($children == 1) {
      $data['birthday1'] = date('d.m.').(date('Y') - $_GET['birthday1']);
    }
    elseif($children == 2) {
      $data['birthday1'] =  date('d.m.').(date('Y') - $_GET['birthday1']);
      $data['birthday2'] =  date('d.m.').(date('Y') - $_GET['birthday2']);
    }
    $full_url = url($url, array('query' => $data));
    $result = drupal_http_request($full_url);
    $result = json_decode($result->data);
    return array(
      'result' => $result,
      'tours' => $result->data,
      'dynamics' => $dynamics,
    );
  }
  return false;
}

/*
 * Form builder for tour newsletter form.
 */
function tours_newsletter_form($form, $form_state) {
  $form['newsletter'] = array(
    '#type'	=> 'textfield',
    '#attributes' => array(
      'class' => array('form-control'),
    ),
  );

  $form['Subscribe'] = array(
    '#value' => 'Subscribe',
    '#type'	=> 'submit',
    '#attributes' => array(
      'class' => array('btn btn-primary'),
    ),
  );

  $form['#theme'][] = 'tours_newsletter_form';

  return $form;
}